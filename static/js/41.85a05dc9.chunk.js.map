{"version":3,"file":"static/js/41.85a05dc9.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/ContactsSelectors.js","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/contactsList/ContactsList.module.css?908f","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","components/userMenu/UserMenu.jsx","webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94","pages/contactsPage/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const filteredContact = items.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContact;\n  }\n);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TextField, Box, Button } from '@mui/material';\nimport { addContacts } from '../../redux/contacts/ContactsOperations';\nimport { getContacts } from '../../redux/contacts/ContactsSelectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeInput = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const repeatName = items.find(el => {\n      return el.name.toLowerCase() === name.toLowerCase();\n    });\n    if (repeatName) {\n      alert(`${name} ia already in contacts`);\n      return;\n    }\n    const oneContact = { name, number };\n    dispatch(addContacts(oneContact));\n    resetForm();\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"name\"\n        label=\"Name\"\n        name=\"name\"\n        type=\"text\"\n        variant=\"standard\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChangeInput}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"number\"\n        label=\"Phone number\"\n        name=\"number\"\n        type=\"tel\"\n        variant=\"standard\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChangeInput}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Add contact\n      </Button>\n    </Box>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsList_container__8KLhR\",\"title\":\"ContactsList_title__SuenE\",\"contactsList\":\"ContactsList_contactsList__6gviw\",\"contactsItem\":\"ContactsList_contactsItem__El263\",\"button\":\"ContactsList_button__lexmN\"};","// import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  // getContacts,\n  removeContacts,\n} from '../../redux/contacts/ContactsOperations';\nimport {\n  getFilteredContacts,\n  // getIsLoading,\n} from '../../redux/contacts/ContactsSelectors';\n\nimport s from './ContactsList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const filteredContact = useSelector(getFilteredContacts);\n  // const isLoading = useSelector(getIsLoading);\n\n  // useEffect(() => {\n  //   dispatch(getContacts());\n  // }, [dispatch]);\n\n  return (\n    <section className={s.container}>\n      <ul className={s.contactsList}>\n        {filteredContact.map(({ id, name, number }) => (\n          <li key={id} className={s.contactsItem}>\n            <p>\n              {name}: <span>{number}</span>\n            </p>\n            <button\n              className={s.button}\n              onClick={() => dispatch(removeContacts(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      {/* {isLoading && <h3>Loading...</h3>} */}\n    </section>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/ContactsSlice';\nimport { getFilter } from '../../redux/contacts/ContactsSelectors';\nimport { TextField, Box } from '@mui/material';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"name\"\n        label=\"Find contact by name\"\n        name=\"name\"\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(filterContacts(evt.target.value))}\n      />\n    </Box>\n  );\n}\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getUserName } from 'redux/auth/authSelector';\nimport { Button } from '@mui/material';\nimport { logOutUser } from 'redux/auth/authOperations';\n\nfunction UserMenu() {\n  const name = useSelector(getUserName);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <p>{name}</p>\n      <Button variant=\"contained\" onClick={() => dispatch(logOutUser())}>\n        LOG OUT\n      </Button>\n    </div>\n  );\n}\n\nexport default UserMenu;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__ZH0mn\",\"title\":\"ContactForm_title__AFyAJ\",\"form\":\"ContactForm_form__ttXmo\",\"lable\":\"ContactForm_lable__qF0NR\",\"input\":\"ContactForm_input__e2U+9\"};","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport ContactForm from '../../components/contactForm/ContactForm';\nimport ContactList from '../../components/contactsList/ContactsList';\nimport Filter from '../../components/filter/Filter';\nimport { getIsAuth } from '../../redux/auth/authSelector';\nimport UserMenu from '../../components/userMenu/UserMenu';\nimport { getContacts } from '../../redux/contacts/ContactsOperations';\nimport s from '../../components/contactForm/ContactForm.module.css';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const token = useSelector(getIsAuth);\n  useEffect(() => {\n    console.log(token);\n    dispatch(getContacts(token));\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <UserMenu />\n      <ContactForm title=\"Add contact\" />\n      <h1 className={s.title}>Contacts</h1>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","item","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChangeInput","evt","target","Box","component","onSubmit","preventDefault","el","alert","oneContact","addContacts","noValidate","sx","mt","TextField","margin","fullWidth","id","label","type","variant","pattern","title","required","onChange","Button","mb","filteredContact","className","s","onClick","removeContacts","filterContacts","getUserName","logOutUser","ContactsPage","token","getIsAuth","useEffect","console","log"],"sourceRoot":""}