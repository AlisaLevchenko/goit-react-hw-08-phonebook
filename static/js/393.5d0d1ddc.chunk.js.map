{"version":3,"file":"static/js/393.5d0d1ddc.chunk.js","mappings":"8NAMe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAIC,OAApBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACE,OAEL,EAgBKC,EAAY,WAChBX,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,2BACG,KACD,kBAAMQ,SAvBW,SAAAJ,GACnBA,EAAIK,iBASJR,IACAM,GACD,EAWiCG,aAAa,MAA3C,WACE,mBAAOC,UAAU,YAAjB,kBAEE,kBACEA,UAAU,YACVC,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUV,EACVW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOL,UAAU,YAAjB,mBAEE,kBACEA,UAAU,YACVC,KAAK,MACLjB,KAAK,QACLW,MAAOT,EACPgB,SAAUV,EACVW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAOL,UAAU,YAAjB,sBAEE,kBACEA,UAAU,YACVC,KAAK,MACLjB,KAAK,WACLW,MAAOP,EACPc,SAAUV,EACVW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQL,UAAU,aAAaC,KAAK,SAApC,8BAiBP,CC3GD,IAIA,EAJmB,WACjB,OAAO,SAACnB,EAAD,GACR,C","sources":["components/authorizationForm/AuthorizationForm.jsx","pages/signupPage/SignupPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  // useSelector,\n  useDispatch,\n} from 'react-redux';\n\nexport default function AuthorizationForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeInput = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    // const repeatName = items.find(el => {\n    //   return el.name.toLowerCase() === name.toLowerCase();\n    // });\n    // if (repeatName) {\n    //   alert(`${name} ia already in contacts`);\n    //   return;\n    // }\n    // const oneContact = { name, phone };\n    dispatch();\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      {' '}\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className=\"{s.lable}\">\n          Name\n          <input\n            className=\"{s.input}\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className=\"{s.lable}\">\n          Email\n          <input\n            className=\"{s.input}\"\n            type=\"tel\"\n            name=\"email\"\n            value={email}\n            onChange={handleChangeInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <label className=\"{s.lable}\">\n          Password\n          <input\n            className=\"{s.input}\"\n            type=\"tel\"\n            name=\"password\"\n            value={password}\n            onChange={handleChangeInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className=\"{s.button}\" type=\"submit\">\n          Add contact\n          {/* {location === '/login' ? 'Login' : 'Sign Up'} */}\n        </button>\n\n        {/* <div className={styles.errorContainer}>\n          {error && (\n            <p className={styles.error}>\n              {location === '/login'\n                ? ' Incorrect email or password'\n                : 'This email is alredy used'}\n            </p>\n          )}\n        </div> */}\n      </form>\n    </div>\n  );\n}\n","import AuthorizationForm from '../../components/authorizationForm/AuthorizationForm';\n\nconst SignupPage = () => {\n  return <AuthorizationForm />;\n};\n\nexport default SignupPage;\n"],"names":["AuthorizationForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChangeInput","evt","target","value","resetForm","onSubmit","preventDefault","autoComplete","className","type","onChange","pattern","title","required"],"sourceRoot":""}